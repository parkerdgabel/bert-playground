# Multi-Task Classification Configuration Example
# For problems with multiple related tasks to solve simultaneously

model:
  name: "mlx-community/answerdotai-ModernBERT-base-4bit"
  task_type: "multiclass"  # Main task type
  num_classes: 5  # Main task classes (e.g., sentiment)
  pooling_type: "attention"
  hidden_dim: 384
  activation: "gelu"
  dropout_rate: 0.1
  use_layer_norm: true
  
  # Main task class names
  class_names:
    - "very_negative"
    - "negative"
    - "neutral"
    - "positive"
    - "very_positive"
  
  # Auxiliary tasks configuration
  auxiliary_heads:
    # Emotion detection (multiclass)
    emotion:
      task_type: "multiclass"
      num_classes: 8
      hidden_dim: 256
      activation: "relu"
      dropout_rate: 0.15
      class_names:
        - "joy"
        - "sadness"
        - "anger"
        - "fear"
        - "surprise"
        - "disgust"
        - "trust"
        - "anticipation"
    
    # Toxicity detection (binary)
    toxicity:
      task_type: "binary"
      hidden_dim: 128
      activation: "gelu"
      dropout_rate: 0.1
    
    # Topic classification (multiclass)
    topic:
      task_type: "multiclass"
      num_classes: 10
      hidden_dim: 256
      activation: "silu"
      dropout_rate: 0.2
    
    # Formality level (ordinal-like regression)
    formality:
      task_type: "regression"
      num_classes: 1  # Single output
      hidden_dim: 128
      activation: "tanh"
      dropout_rate: 0.1

training:
  batch_size: 32
  learning_rate: 2e-5
  num_epochs: 20
  gradient_accumulation_steps: 2
  warmup_ratio: 0.1
  weight_decay: 0.01
  
  # Multi-task loss weights
  task_weights:
    main: 1.0  # Main task weight
    emotion: 0.5
    toxicity: 0.3
    topic: 0.4
    formality: 0.2
  
  # Dynamic weight adjustment
  dynamic_task_weighting:
    enabled: true
    method: "uncertainty"  # or "gradnorm", "cosine"
    update_frequency: 100  # Update every N steps
  
  # Task sampling strategy
  task_sampling:
    method: "proportional"  # or "uniform", "annealed"
    main_task_ratio: 0.5  # 50% of updates include main task

data:
  max_sequence_length: 256
  text_column: "text"
  
  # Label columns for each task
  label_columns:
    main: "sentiment"
    emotion: "emotion_label"
    toxicity: "is_toxic"
    topic: "topic_category"
    formality: "formality_score"
  
  # Missing label handling
  missing_label_strategy: "skip"  # or "mask", "impute"
  
  # Task-specific preprocessing
  task_preprocessing:
    formality:
      normalize: true  # Normalize regression targets
      min_val: 0.0
      max_val: 1.0

evaluation:
  # Evaluate all tasks
  evaluate_all_tasks: true
  
  # Task-specific metrics
  task_metrics:
    main:
      - "accuracy"
      - "f1_macro"
      - "confusion_matrix"
    emotion:
      - "accuracy"
      - "f1_micro"
      - "per_class_f1"
    toxicity:
      - "binary_accuracy"
      - "f1"
      - "roc_auc"
    topic:
      - "accuracy"
      - "top_k_accuracy"
    formality:
      - "mse"
      - "mae"
      - "pearson_correlation"
  
  # Primary metrics for model selection
  primary_metrics:
    main: "f1_macro"
    emotion: "f1_micro"
    toxicity: "f1"
    topic: "accuracy"
    formality: "pearson_correlation"
  
  # Overall model selection
  model_selection:
    method: "weighted_average"  # Combine task metrics
    weights:
      main: 0.5
      emotion: 0.2
      toxicity: 0.1
      topic: 0.15
      formality: 0.05

# MLflow tracking
mlflow:
  track_per_task_metrics: true
  log_task_confusion_matrices: true
  log_task_correlations: true  # Analyze task relationships