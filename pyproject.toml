[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "k-bert"
version = "0.1.0"
description = "State-of-the-art BERT implementation for Apple Silicon using MLX, designed for Kaggle competitions"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Parker Gabel", email = "parker@example.com"},
]
maintainers = [
    {name = "Parker Gabel", email = "parker@example.com"},
]
license = {text = "MIT"}
keywords = ["bert", "mlx", "kaggle", "machine-learning", "nlp", "apple-silicon", "modernbert"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console", 
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mlx>=0.22.0,<0.25.0", # Revert to version that works with dependencies
    "mlx-data>=0.0.7",
    "mlx-lm>=0.20.0",
    "mlx-vlm>=0.1.21,<0.4.0", # Compatible with mlx-embeddings
    "mlx-embeddings @ git+https://github.com/Blaizzy/mlx-embeddings.git",
    "numba>=0.57.0", # Force newer numba that supports Python 3.10
    "transformers[sentencepiece]>=4.44.0",
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "scikit-learn>=1.5.0",
    "tqdm>=4.67.0",
    "kaggle>=1.6.0",
    "mlflow>=2.19.0",
    "matplotlib>=3.9.0",
    "seaborn>=0.13.0",
    "rich>=13.10.0",
    "loguru>=0.7.2",
    "python-dotenv>=1.0.1",
    "typer>=0.15.0",
    "click>=8.1.0",
    "psutil>=5.9.0",
    "pyyaml>=6.0.2",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.7.0",
    "toml>=0.10.2",
    "kink>=0.8.0",
]

[project.urls]
Homepage = "https://github.com/parkergabel/mlx-bert"
Repository = "https://github.com/parkergabel/mlx-bert"
Documentation = "https://github.com/parkergabel/mlx-bert/blob/main/README.md"
"Bug Tracker" = "https://github.com/parkergabel/mlx-bert/issues"

[project.scripts]
k-bert = "cli.main:main"
kbert = "cli.main:main"  # Alias without hyphen
bert = "cli.main:main"  # Short alias for convenience

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.25.0",
    "pytest-xdist>=3.6.1",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "ipykernel>=6.29.0",
    "black>=24.10.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
pythonpath = ["."]
addopts = [
    "-ra",
    "--strict-markers",
    "-vv",
    "--tb=short",
    "--maxfail=1",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "mlx: marks tests that require MLX",
    "mlflow: marks tests that require MLflow",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]


[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
]

[dependency-groups]
dev = [
    "kaggle-mcp",
    "ruff>=0.12.3",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["cli*", "models*", "data*", "training*", "utils*", "core*", "adapters*", "bert_playground*", "application*", "domain*", "infrastructure*", "ports*"]
exclude = ["tests*", "cache*", "output*", "mlruns*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml"]

[tool.uv.sources]
kaggle-mcp = { git = "https://github.com/54yyyu/kaggle-mcp.git" }
